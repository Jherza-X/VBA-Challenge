Attribute VB_Name = "Module1"
'--------------------------------------------
'       SCRIPT INFORMATION
'--------------------------------------------

' Script Name:     Multiple Year Stock Data Analysis
' Author:          J. Enrique Hernandez
' Purpose:         Educational homework for Challenge 2
' Course:          University of Toronto Data Visualization Bootcamp
' Data Source:     Generated by edX Boot Camps LLC
'                  (Intended for educational purposes only)
' Date:            08/30/2023

'--------------------------------------------
'       END OF SCRIPT INFORMATION
'--------------------------------------------


Sub Multiple_years_stock_data()

'Variables declaration
Dim ticker As String
Dim Stock_vol As Double
Dim Summary_Table_Row As Integer
Dim yc_open As Double
Dim yc_close As Double
Dim Aux As Integer 'Auxiliar counter
Dim yc_total As Double
Dim yc_percent As Double
Dim Max_change As Double
Dim Max_ticker As String
Dim Min_change As Double
Dim Min_ticker As String
Dim Max_stock As Double
Dim Max_stock_ticker As String



'Variables initialization
Stock_vol = 0
Summary_Table_Row = 2
yc_open = 0
yc_close = 0
Aux = 0
yc_total = 0
yc_percent = 0
Max_change = 0
Max_ticker = " "
Min_change = 0
Min_ticker = " "
Max_stock = 0
Max_stock_ticker = " "


For Each ws In Worksheets

' Create a Variable to Hold File Name, Last Row, and Year
        Dim WorksheetName As String

        WorksheetName = ws.Name
        MsgBox WorksheetName + " " + "WORKING"

  'Naming the summary table columns
        ws.Cells(1, 9).Value = "Ticker"
        ws.Columns(9).AutoFit
        ws.Cells(1, 10).Value = "Yearly Change"
        ws.Columns(10).AutoFit
        ws.Cells(1, 11).Value = "Percent Change"
        ws.Columns(11).AutoFit
        ws.Cells(1, 12).Value = "Total Stock Vol"
        ws.Columns(12).AutoFit
        ws.Cells(1, 15).Value = "Ticker"
        ws.Columns(15).AutoFit
        ws.Cells(1, 16).Value = "Value"
        ws.Columns(16).AutoFit
        ws.Cells(2, 14).Value = "Greatest % Increase"
        ws.Columns(14).AutoFit
        ws.Cells(3, 14).Value = "Greatest % Decrease"
        ws.Cells(4, 14).Value = "Greatest Total Vol"
        
' Determine the Last Row
 lastRow = ws.Cells(Rows.Count, 1).End(xlUp).Row

    For i = 2 To lastRow
    
        yc_open = ws.Cells(i, 3).Value
        
        'Determine different tick values
        If ws.Cells(i + 1, 1).Value <> ws.Cells(i, 1).Value Then
            
           'Get ticker value
            ticker = ws.Cells(i, 1).Value
           'Get year closing value for one tick
            yc_close = ws.Cells(i, 6).Value
           'Get year oppening value for one tick
            yc_open = ws.Cells(i - Aux, 3).Value
            
            'MsgBox ("close:" & yc_close)
            'MsgBox ("Aux: " & Aux)
            'MsgBox ("Open: " & yc_open)
            
            'Year Change Calculation
            yc_total = yc_close - yc_open
            'MsgBox ("Yearly Change: " & yc_total)
        
        
            'Percentage yearly change calculation
            yc_percent = Round((yc_total * 100) / yc_open, 2)
            'MsgBox ("Yearly change percentage: " & yc_percent)
            
            'Last value for Stock volume
            Stock_vol = Stock_vol + ws.Cells(i, 7).Value
            'Test New tick
            'MsgBox ("New Tick: " + Cells(i, 1).Value)
            
            'Print results in the summary table
            ws.Range("I" & Summary_Table_Row).Value = ticker
            ws.Range("J" & Summary_Table_Row).Value = yc_total
            
            'Using conditional formatting that will highlight positive change in green and negative change in red.
            If yc_total < 0 Then
              ws.Range("J" & Summary_Table_Row).Interior.Color = RGB(255, 0, 0) ' Red
            Else
              ws.Range("J" & Summary_Table_Row).Interior.Color = RGB(0, 255, 0) 'Green
            End If
        
            ws.Range("K" & Summary_Table_Row).Value = yc_percent
            ws.Range("L" & Summary_Table_Row).Value = Stock_vol
           
           
           
            'Increment on Row number in Su  mmary table
            Summary_Table_Row = Summary_Table_Row + 1
            'Reset stock value for the new Tick
            Stock_vol = 0
            Aux = 0
        Else
            Stock_vol = Stock_vol + ws.Cells(i, 7).Value
            Aux = Aux + 1
            'MsgBox ("Stock: " & Stock_vol)
        End If
        
    Next i
    

'Adding functionality o return the stock with the "Greatest % increase", "Greatest % decrease", and "Greatest total volume"
    
   For i = 2 To lastRow
    
        If ws.Cells(i, 11).Value > Max_change Then
            Max_change = ws.Cells(i, 11).Value
            Max_ticker = ws.Cells(i, 9).Value
        End If
        
        If ws.Cells(i, 11).Value < Min_change Then
            Min_change = ws.Cells(i, 11).Value
            Min_ticker = ws.Cells(i, 9).Value
        End If
        
        If ws.Cells(i, 12).Value > Max_stock Then
            Max_stock = ws.Cells(i, 12).Value
            Max_stock_ticker = ws.Cells(i, 9).Value
        End If
        
   Next i
   
        ws.Range("P" & 2).Value = Max_change
        ws.Range("P" & 3).Value = Min_change
        ws.Range("P" & 4).Value = Max_stock
        ws.Range("O" & 2).Value = Max_ticker
        ws.Range("O" & 3).Value = Min_ticker
        ws.Range("O" & 4).Value = Max_stock_ticker


 'Variables reset
    Stock_vol = 0
    Summary_Table_Row = 2
    yc_open = 0
    yc_close = 0
    Aux = 0
    yc_total = 0
    yc_percent = 0
    Max_change = 0
    Max_ticker = " "
    Min_change = 0
    Min_ticker = " "
    Max_stock = 0
    Max_stock_ticker = " "

 Next ws


End Sub


